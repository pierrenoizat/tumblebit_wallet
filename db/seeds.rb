# This file should contain all the record creation needed to seed the database with its default values.
# The data can then be loaded with the rake db:seed (or created alongside the db with db:setup).
#
# Examples:
#
#   cities = City.create([{ name: 'Chicago' }, { name: 'Copenhagen' }])
#   Mayor.create(name: 'Emanuel', city: cities.first)

Post.delete_all

Post.create(
  id: 1,
  title: "My Very First Post",
  published_at: Time.now - 1.day,
  body: 
  %Q{### There Is Something You Should Know!

  This is my very first post using markdown!

  How do you like it?  I learned this from [RichOnRails.com](http://richonrails.com/articles/rendering-markdown-with-redcarpet)!}
)

Post.create(
  id: 2,
  title: "My Second Post",
  published_at: Time.now,
  body: 
  %Q{### My List of Things To Do!

  Here is the list of things I wish to do!
  
  * write more posts
  * write even more posts
  * write even more posts!}
)

Post.create(
  id: 3,
  title: "About",
  published_at: Time.now,
  body: 
  %Q{### About hashtre.es

    The root path of each node can be followed on the tree graph: a zero points to the top node while a one points to the bottom node.

    If there is only a single parent, then the root path includes a zero to represent the link between the node and its single parent.

    For instance, in a tree of height 5, a root path like "0000" represents the top edge of the tree graph linking the root to the top leaf node.

    The position of the leaf nodes are randomized so that nothing can be inferred about the accounts from their respective position in the tree graph.

    Tree graphs are drawn using the [D3 javascript library](http://d3js.org)

    This application allows users to create and navigate a binary tree build from an account list uploaded to AWS S3.

    Need help? Contact me at pierre dot noizat at paymium dot com

    If the application doesn't work as expected, please [report an issue](https://github.com/pierrenoizat/hashtree/issues)
    and include the diagnostics.

    This application requires:

    - Ruby 2.3.0
    - Rails 4.2.0}
)

Post.create(
  id: 4,
  title: "Getting started 1",
  published_at: Time.now,
  body:
  %Q{### Getting Started with Leaves

    To create a new binary tree, upload a CSV file of your account list.
    Each account is on a new line with: name, credit

    Make sure not to add an empty line at the end of your file as this would cause the line count to be incremented, messing up the computation of the tree.
    If that happens, the application will not build the hashtree until a corrected file is uploaded.

    A random nonce generated by the application is saved and associated with each account: 
    this nonce is hashed with the account name and credit to generate an account hash while preserving the privacy of the account owner.

    This nonce can be used also as a secret access key for the user to retrieve his/her account securely in a published hash tree.

    Each account is then represented by a leaf in the tree with a SHA256 hash of the following string: "name|credit|nonce"


    In RoR, the hash is calculated in app/models/leaf_node.rb_ like in the following example:}
)

Post.create(
  id: 5,
  title: "Getting started 2",
  published_at: Time.now,
  body:
  %Q{### Interior Nodes  

    Leaves are paired to form a binary tree.
    An interior node hash is calculated from the hashes of its left and right children nodes.

    The parent node hash is a SHA256 hash of the following string: "sum|left|right"


    The parent node sum is calculated simply by adding the sums of the two children nodes.

    As a result, the root node sum can be checked by adding all the account balance.

    If there is an odd number of leaves, one leaf is randomly selected to be replicated as an interior node.
    This particular interior node has this leaf as its only child.

    Likewise, at any given height h in the tree, if there is an odd number of interior nodes at that height, a node is selected to be replicated as an interior node of height h+1.
    This particular interior node has this node as its only child.
    Two leaf hashes are combined to compute an interior node hash like so:}
)

Post.create(
  id: 6,
  title: "License",
  published_at: Time.now,
  body:
  %Q{### License

    Â© Paymium 2011-2016 Soon to be released under the [MIT license](http://opensource.org/licenses/mit-license.php)}
)